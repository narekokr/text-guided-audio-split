name: Build and Push to Artifact Registry

on:
  push:
    branches:
      - main
      - test-deploy

env:
  PROJECT_ID: test-84720
  GAR_LOCATION: europe
  REPOSITORY: soundscribe
  IMAGE_NAME: soundscribe

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up gcloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - id: gcp-sdk
        name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: alpha

      - name: Authenticate to GAR
        run: gcloud auth configure-docker ${{env.GAR_LOCATION}}-docker.pkg.dev

      - name: Build and push to Artifact Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true

          tags: |
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            OPENAPI_TOKEN=${{ secrets.API_KEY }}

      - name: Deploy to Cloud Run
        run: |
          IMAGE_URL=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest

          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image $IMAGE_URL \
            --region ${{ env.REGION }} \
            --project ${{ env.PROJECT_ID }} \
            --platform managed \
            --concurrency 80 \
            --timeout 3600 \
            --memory 16Gi \
            --service-account 99992935726-compute@developer.gserviceaccount.com \
            --update-env-vars DB_URL=${{ secrets.DB_URL }},API_KEY=${{ secrets.API_KEY }} \
            --max-instances 3 \
            --allow-unauthenticated \
            --no-cpu-throttling \
            --gpu type=nvidia-l4,count=1
